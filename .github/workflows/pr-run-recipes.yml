---
name: pr-run-recipes

on:
  workflow_call:
    inputs:
      java_version:
        description: What version of Java to use
        type: number
        default: 25
        required: false
      recipe:
        description: The OpenRewrite recipe to apply to the PR
        type: string
        required: false
        default: io.moderne.ModerneBestPractices
      rewrite_yml:
        description: The contents of the rewrite.yml file to apply to the PR
        type: string
        required: false
        default: |
          ---
          type: specs.openrewrite.org/v1beta/recipe
          name: io.moderne.ModerneBestPractices
          displayName: Moderne best practices
          description: Applies best practices for Moderne Inc. SaaS repositories.
          recipeList:
            - org.openrewrite.java.testing.assertj.Assertj
            - org.openrewrite.java.testing.cleanup.RemoveTestPrefix
            - org.openrewrite.java.logging.slf4j.Slf4jBestPractices
            - org.openrewrite.java.OrderImports:
                removeUnused: true
            - org.openrewrite.staticanalysis.RemoveExtraSemicolons
            - io.moderne.NullabilityBestPractices
          ---
          type: specs.openrewrite.org/v1beta/recipe
          name: io.moderne.NullabilityBestPractices
          displayName: Nullability best practices
          description: Use JSpecify nullable annotations; drop Nonnull annotations; use `NullMarked` on `package-info.java` instead.
          recipeList:
            - org.openrewrite.java.jspecify.MigrateFromOpenRewriteAnnotations
            - org.openrewrite.staticanalysis.NullableOnMethodReturnType
            - org.openrewrite.java.RemoveAnnotation:
                annotationPattern: '@org.jetbrains.annotations.NotNull'
            - org.openrewrite.java.RemoveAnnotation:
                annotationPattern: '@javax.annotation.Nonnull'
            - org.openrewrite.java.RemoveAnnotation:
                annotationPattern: '@jakarta.annotation.Nonnull'
            - org.openrewrite.java.jspecify.MigrateToJspecify
            - tech.picnic.errorprone.refasterrules.TimeRulesRecipes

      init_gradle:
        description: The Gradle init script to apply to the PR
        type: string
        required: false
        default: |
          initscript {
            repositories {
              maven { url 'https://plugins.gradle.org/m2' }
            }
            dependencies {
              classpath('org.openrewrite:plugin:latest.release')
            }
          }
          rootProject {
            plugins.apply(org.openrewrite.gradle.RewritePlugin)
            dependencies {
                rewrite('org.openrewrite.recipe:rewrite-rewrite:latest.release')
            }
            afterEvaluate {
              if (repositories.isEmpty()) {
                repositories {
                  mavenCentral()
                }
              }
            }
          }
    secrets:
      moderne_artifactory_username:
        description: Username for accessing the https://artifactory.moderne.ninja/artifactory/moderne-private repository.
        required: false
      moderne_artifactory_password:
        description: Password for accessing the https://artifactory.moderne.ninja/artifactory/moderne-private repository.
        required: false

env:
  GRADLE_SWITCHES: --console=plain --info --stacktrace --warning-mode=all --no-daemon -Dorg.gradle.jvmargs=-Xmx2g
  MODERNE_ARTIFACTORY_USERNAME: ${{ secrets.moderne_artifactory_username }}
  MODERNE_ARTIFACTORY_PASSWORD: ${{ secrets.moderne_artifactory_password }}

# https://securitylab.github.com/research/github-actions-preventing-pwn-requests/
# Since this pull request receives untrusted code, we should **NOT** have any secrets in the environment.
jobs:
  upload-patch:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}

      # Capture the PR number
      - name: Create pr_number.txt
        run: echo "${{ github.event.number }}" > pr_number.txt
      - uses: actions/upload-artifact@v4
        with:
          name: pr_number
          path: pr_number.txt
      - name: Remove pr_number.txt
        run: rm -f pr_number.txt

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      # Execute best practices recipe
      - name: Create temporary files
        run: |
          echo "${{ inputs.rewrite_yml }}" > rewrite.yml
          echo "${{ inputs.init_gradle }}" > rewrite-init.gradle
      - name: Apply Moderne best practices
        run: ./gradlew ${{ env.GRADLE_SWITCHES }} rewriteRun --init-script rewrite-init.gradle -Drewrite.activeRecipe=${{ inputs.recipe }}
      - name: Remove temporary files
        run: rm -f rewrite.yml rewrite-init.gradle

      # Capture the diff
      - name: Create patch
        run: |
          git diff > git-diff.patch
          cat git-diff.patch
      - uses: actions/upload-artifact@v4
        with:
          name: patch
          path: git-diff.patch
