---
name: repository-backup

on:
  workflow_call:
    inputs:
      bucket_storage_service_url:
        description: The URL to the object storage service. (e.g. https://s3.amazonaws.com, https://s3.us-west-2.amazonaws.com, etc.). See https://docs.aws.amazon.com/general/latest/gr/s3.html for AWS.
        type: string
        default: https://s3.us-west-2.amazonaws.com
        required: false
      slack_channel:
        description: Slack channel to post notification in the event of failure.
        type: string
        default: ops-alerts
        required: false
    secrets:
      bucket_access_key_id:
        description: Value of the object storage bucket backup access key ID (e.g., S3 has ACCESS_KEY_ID).
        required: true
      bucket_secret_access_key:
        description: Value of the object storage bucket backup secret access key (e.g., S3 has ACCESS_KEY_SECRET).
        required: true
      bucket_mirror_target:
        description: Name of the object storage bucket backup to use.
        required: true
      slack_notification_webhook:
        description: (DEPRECATED) Where to post notifications
        required: false
      slack_bot_token:
        description: Access token for posting slack messages
        required: false

jobs:
  repository-backup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: peter-evans/s3-backup@v1
        env:
          ACCESS_KEY_ID: ${{ secrets.bucket_access_key_id }}
          SECRET_ACCESS_KEY: ${{ secrets.bucket_secret_access_key }}
          MIRROR_TARGET: ${{ secrets.bucket_mirror_target }}/${{ github.repository }}
          STORAGE_SERVICE_URL: ${{ inputs.bucket_storage_service_url }}
        with:
          args: --overwrite --remove
      - name: Send notification on error
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ inputs.slack_channel }}
          slack-message: ":boom: Unable to backup ${{ github.repository }} to S3"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.slack_bot_token }}

