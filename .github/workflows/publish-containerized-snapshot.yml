---
name: publish-containerized-snapshot

on:
  workflow_call:
    inputs:
      java_version:
        description: What version of Java to use
        type: number
        default: 17
        required: false
      runner:
        description: Which runner to use
        default: ubuntu-latest
        type: string
        required: false

env:
  GRADLE_SWITCHES: --console=plain --info --stacktrace

jobs:
  publish-snapshot:
    runs-on: ${{ inputs.runner }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ inputs.java_version }}
          cache: "gradle"

      - name: configure-git-user
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Clear cache
        run: |
          rm -rf /opt/hostedtoolcache/CodeQL
          rm -rf /opt/hostedtoolcache/Ruby
          rm -rf /opt/hostedtoolcache/go
          rm -rf /opt/hostedtoolcache/node

      - name: set up gradle
        uses: gradle/actions/setup-gradle@v4
      - name: build, tag, and push docker image
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          GRGIT_USER: ${{ github.actor }}
          GRGIT_PASS: ${{ secrets.GITHUB_TOKEN }}
          MODERNE_ARTIFACTORY_USERNAME: ${{ secrets.moderne_artifactory_username }}
          MODERNE_ARTIFACTORY_PASSWORD: ${{ secrets.moderne_artifactory_password }}
        run: ./gradlew ${{ env.GRADLE_SWITCHES }} dockerBuildImage dockerPushImageAmazon -x test